package info.btsland.exchange.mapper;

import info.btsland.exchange.model.Chat;
import info.btsland.exchange.model.ChatExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface ChatMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chat
     *
     * @mbggenerated
     */
    @SelectProvider(type=ChatSqlProvider.class, method="countByExample")
    int countByExample(ChatExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chat
     *
     * @mbggenerated
     */
    @DeleteProvider(type=ChatSqlProvider.class, method="deleteByExample")
    int deleteByExample(ChatExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chat
     *
     * @mbggenerated
     */
    @Delete({
        "delete from chat",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chat
     *
     * @mbggenerated
     */
    @Insert({
        "insert into chat (id, from_user, ",
        "to_user, context, ",
        "time)",
        "values (#{id,jdbcType=INTEGER}, #{fromUser,jdbcType=VARCHAR}, ",
        "#{toUser,jdbcType=VARCHAR}, #{context,jdbcType=VARCHAR}, ",
        "#{time,jdbcType=TIMESTAMP})"
    })
    int insert(Chat record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chat
     *
     * @mbggenerated
     */
    @InsertProvider(type=ChatSqlProvider.class, method="insertSelective")
    int insertSelective(Chat record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chat
     *
     * @mbggenerated
     */
    @SelectProvider(type=ChatSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="from_user", property="fromUser", jdbcType=JdbcType.VARCHAR),
        @Result(column="to_user", property="toUser", jdbcType=JdbcType.VARCHAR),
        @Result(column="context", property="context", jdbcType=JdbcType.VARCHAR),
        @Result(column="time", property="time", jdbcType=JdbcType.TIMESTAMP)
    })
    List<Chat> selectByExample(ChatExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chat
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, from_user, to_user, context, time",
        "from chat",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="from_user", property="fromUser", jdbcType=JdbcType.VARCHAR),
        @Result(column="to_user", property="toUser", jdbcType=JdbcType.VARCHAR),
        @Result(column="context", property="context", jdbcType=JdbcType.VARCHAR),
        @Result(column="time", property="time", jdbcType=JdbcType.TIMESTAMP)
    })
    Chat selectByPrimaryKey(Integer id);

    @Select({
            "select",
            "id, from_user, to_user, context, time",
            "from chat",
            "where from_user = #{param1,jdbcType=VARCHAR} and to_user=#{param2,jdbcType=VARCHAR} or from_user = #{param2,jdbcType=VARCHAR} and to_user=#{param1,jdbcType=VARCHAR}"
    })
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
            @Result(column="from_user", property="fromUser", jdbcType=JdbcType.VARCHAR),
            @Result(column="to_user", property="toUser", jdbcType=JdbcType.VARCHAR),
            @Result(column="context", property="context", jdbcType=JdbcType.VARCHAR),
            @Result(column="time", property="time", jdbcType=JdbcType.TIMESTAMP)
    })
    List<Chat> selectByFromAndTo(String from,String to);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chat
     *
     * @mbggenerated
     */
    @UpdateProvider(type=ChatSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Chat record, @Param("example") ChatExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chat
     *
     * @mbggenerated
     */
    @UpdateProvider(type=ChatSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Chat record, @Param("example") ChatExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chat
     *
     * @mbggenerated
     */
    @UpdateProvider(type=ChatSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Chat record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chat
     *
     * @mbggenerated
     */
    @Update({
        "update chat",
        "set from_user = #{fromUser,jdbcType=VARCHAR},",
          "to_user = #{toUser,jdbcType=VARCHAR},",
          "context = #{context,jdbcType=VARCHAR},",
          "time = #{time,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Chat record);
}